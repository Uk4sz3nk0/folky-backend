openapi: 3.0.3
info:
  title: Dancing team specification
  description: Dancing team specification
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /api/recruitments/create-recruitment:
    description: |
      Endpoint used for creating new recruitment
    put:
      tags:
        - "Recruitment"
      operationId: createRecruitment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recruitment"
      responses:
        "200":
          description: Ok. Successful response will return ok code
  /api/recruitments/edit-recruitment:
    description: |
      Endpoint used for editing recruitment
    patch:
      tags:
        - "Recruitment"
      operationId: editRecruitment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recruitment"
      responses:
        "200":
          description: Ok. Successful response will return ok status
  /api/recruitments/get-recruitments:
    description: |
      Endpoint used for getting all recruitments (Only for admin)
    get:
      tags:
        - "Recruitment"
      operationId: getRecruitments
      responses:
        "200":
          description: Ok. Successful response will return list of recruitments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recruitment"
  /api/recruitments/get-team-recruitments:
    description: |
      Endpoint used for getting all team opened recruitments
    post:
      tags:
        - "Recruitment"
      operationId: getTeamRecruitments
      parameters:
        - name: teamId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return active/opened team recruitments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recruitment"
  /api/recruitments/get-recruitment:
    description: |
      Endpoint used for getting specific recruitment
    post:
      tags:
        - "Recruitment"
      operationId: getRecruitment
      parameters:
        - name: id
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return specified recruitment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recruitment"
  /api/recruitments/get-recruitment-requests:
    description: |
      Endpoint for getting list of recruitment request of specific recruitment
    post:
      tags:
        - "Recruitment"
      operationId: getRecruitmentRequests
      parameters:
        - name: recruitmentId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of recruitment requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecruitmentRequest"
  /api/recruitments/create-recruitment-request:
    description: |
      Endpoint used for creating new recruitment request
    put:
      tags:
        - "Recruitment"
      operationId: createRecruitmentRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecruitmentRequest"
      responses:
        "200":
          description: Ok. Successful response will return ok status
  /api/recruitments/edit-recruitment-request:
    description: |
      Endpoint used for editing recruitment request
    patch:
      tags:
        - "Recruitment"
      operationId: editRecruitmentRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecruitmentRequest"
      responses:
        "200":
          description: Ok. Successful response will return ok status.
  /api/recruitments/delete-recruitment-request:
    description: |
      Endpoint used for deleting specified request
    delete:
      tags:
        - "Recruitment"
      operationId: deleteRecruitmentRequest
      parameters:
        - name: id
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status
  /api/recruitments/get-requests:
    description: |
      Endpoint used for getting all recruitment requests (Only for admin)
    get:
      tags:
        - "Recruitment"
      operationId: getAllRecruitmentRequests
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of recruitment requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecruitmentRequest"
  /api/recruitments/get-user-requests:
    description: |
      Endpoint used for getting user recruitment requests by type
    post:
      tags:
        - "Recruitment"
      operationId: getUserRequests
      parameters:
        - name: requestType
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of user recruitment requests by type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecruitmentRequest"
  /api/recruitments/get-dancing-team-recruitment-requests:
    description: |
      Endpoint used for getting dancing team specified by id recruitment requests by type
    post:
      tags:
        - "Recruitment"
      operationId: getDancingTeamRecruitmentRequests
      parameters:
        - name: teamId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
        - name: recruitmentId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
        - name: requestType
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of dancing team requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecruitmentRequest"
  /api/recruitments/get-recruitment-request:
    description: |
      Endpoint used for getting specific recruitment request
    post:
      tags:
        - "Recruitment"
      operationId: getRecruitmentRequest
      parameters:
        - name: id
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status and requested request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecruitmentRequest"
components:
  schemas:
    Recruitment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        description:
          type: string
        requirements:
          type: array
          items:
            type: string
        isOpened:
          type: boolean
        isEndedByTime:
          type: boolean
        isEndedBeforeEndTime:
          type: boolean
        dancingTeamId:
          type: integer
          format: int64
    RecruitmentRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string
        state:
          type: string
        type:
          type: string
        userId:
          type: integer
          format: int64
        recruitmentId:
          type: integer
          format: int64
