openapi: 3.0.3
info:
  title: Dancing team specification
  description: Dancing team specification
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /api/teams:
    get:
      tags:
        - "DancingTeam"
      operationId: getTeams
      parameters:
        - name: phrase
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 10
        - name: orderBy
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
        - name: direction
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of dancing teams
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageDancingTeamListElement"
    post:
      tags:
        - "DancingTeam"
      operationId: addDancingTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DancingTeam"
      responses:
        "200":
          description: Ok. Successful response will return ok status and added object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DancingTeam"
    patch:
      tags:
        - "DancingTeam"
      operationId: updateTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DancingTeam"
      responses:
        "200":
          description: Ok. Successful response will return ok status and return updated object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DancingTeam"
  /api/teams/filtered:
    post:
      tags:
        - "DancingTeam"
      operationId: getFilteredTeams
      parameters:
        - name: phrase
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 10
        - name: orderBy
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
        - name: direction
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilterObject"
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of dancing teams
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageDancingTeamListElement"
  /api/teams/{id}:
    get:
      tags:
        - "DancingTeam"
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status and specified by id dancing team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DancingTeam"
    delete:
      tags:
        - "DancingTeam"
      operationId: deleteTeam
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status
  /api/teams/{id}/events:
    get:
      description: |
        Endpoint used for getting team events
      tags:
        - "DancingTeam"
      operationId: getTeamEvents
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
            format: int64
        - name: size
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
        - name: connection-types
          in: query
          required: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
        - name: event-time
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Ok. Successful response will return ok status and paged team evens
          content:
            application/json:
              schema:
                $ref: "events-specification.yaml#/components/schemas/PagedEvents"
  /api/teams/{id}/dances:
    put:
      description: |
        Endpoint used for updating or adding team dances
      tags:
        - "DancingTeam"
      operationId: updateTeamDances
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "dance-specification.yaml#/components/schemas/Dance"
      responses:
        "200":
          description: Ok. Successful response will return ok status
    get:
      description: |
        Endpoint used for getting dancing team dances
      tags:
        - "DancingTeam"
      operationId: getTeamDances
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
        - name: size
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of team dances
          content:
            application/json:
              schema:
                $ref: "dance-specification.yaml#/components/schemas/PagedDances"
  /api/teams/{id}/subscriptions:
    description: |
      Endpoint used for getting list of dancing team subscribers
    get:
      tags:
        - "DancingTeam"
      operationId: getSubscribers
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of subscribers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "user-specification.yaml#/components/schemas/User"
    post:
      tags:
        - "DancingTeam"
      operationId: addSubscription
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status
    delete:
      tags:
        - "DancingTeam"
      operationId: deleteSubscription
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status
  /api/teams/{id}/gallery:
    description: |
      Endpoint used for getting gallery images
    get:
      tags:
        - "DancingTeam"
      operationId: getGalleryImages
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return list of images
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/teams/{id}/achievements:
    get:
      description: |
        Endpoint used for getting team achievements
      tags:
        - "DancingTeam"
      operationId: getTeamAchievements
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
        - name: size
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
      responses:
        "200":
          description: Ok. Successful response will return ok status and paged team achievements
          content:
            application/json:
              schema:
                $ref: "achievements-specification.yaml#/components/schemas/PagedAchievements"
components:
  schemas:
    DancingTeamListElement:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        logo:
          type: string
          nullable: true
        logoFilename:
          type: string
          nullable: true
        isVerified:
          type: boolean
    PageDancingTeamListElement:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/DancingTeamListElement"
        pageable:
          type: object
          properties:
            pageNumber:
              type: integer
            pageSize:
              type: integer
            offset:
              type: integer
        totalPages:
          type: integer
        totalElements:
          type: integer
        last:
          type: boolean
        first:
          type: boolean
        numberOfElements:
          type: integer
    DancingTeam:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        filesUUID:
          type: string
          format: uuid
        description:
          type: string
        creationDate:
          type: string
          format: date
        director:
          $ref: "user-specification.yaml#/components/schemas/User"
        directorId:
          type: integer
          format: int64
        accountUser:
          $ref: "user-specification.yaml#/components/schemas/User"
        accountUserId:
          type: integer
          format: int64
        region:
          $ref: "region-specification.yaml#/components/schemas/Region"
        city:
          type: string
        street:
          type: string
        homeNumber:
          type: string
          nullable: true
        flatNumber:
          type: integer
          nullable: true
        zipCode:
          type: string
          nullable: true
        dances:
          type: array
          nullable: true
          items:
            $ref: "dance-specification.yaml#/components/schemas/Dance"
        isRecruitmentOpened:
          type: boolean
          nullable: true
          default: false
        logoFilename:
          type: string
          nullable: true
        bannerFilename:
          type: string
          nullable: true
        dancersAmount:
          type: integer
        musiciansAmount:
          type: integer
        subscribersAmount:
          type: integer
          format: int64
        isSubscribed:
          type: boolean
          default: false
        socialMedia:
          $ref: "#/components/schemas/SocialMedia"
        contact:
          $ref: "#/components/schemas/Contact"
        isVerified:
          type: boolean
        ageCategories:
          type: array
          items:
            type: string
    SocialMedia:
      type: object
      properties:
        facebookUrl:
          type: string
          nullable: true
        instagramUrl:
          type: string
          nullable: true
        youtubeUrl:
          type: string
          nullable: true
        twitterUrl:
          type: string
          nullable: true
        tiktokUrl:
          type: string
          nullable: true
    Range:
      type: object
      properties:
        start:
          type: integer
        end:
          type: integer
    FilterObject:
      type: object
      properties:
        creationDate:
          $ref: "#/components/schemas/Range"
        dancersAmount:
          $ref: "#/components/schemas/Range"
        musiciansAmount:
          $ref: "#/components/schemas/Range"
        selectedRegions:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        ownedSocialMedia:
          type: array
          items:
            type: string
          nullable: false
    Contact:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true