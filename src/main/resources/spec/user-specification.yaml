openapi: 3.0.3
info:
  title: User specification
  description: Specification with user management operations and roles (only for admin)
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /users/add-user:
    description: |
      Endpoint for adding new users
    post:
      tags:
        - "User"
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Ok. Successful response will return created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/edit-user:
    description: |
      Endpoint for editing existing user
    patch:
      tags:
        - "User"
      operationId: editUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Ok. Successful response will return edited user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/delete-user:
    description: |
      Endpoint for deleting user
    delete:
      tags:
        - "User"
      operationId: deleteUser
      parameters:
        - name: id
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. User successfully deleted.
  /users/get-user-by-id:
    description: |
      Endpoint for getting user by id
    post:
      tags:
        - "User"
      operationId: getUserById
      parameters:
        - name: id
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return requested user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/get-user-subscriptions:
    description: |
      Endpoint used for getting user subscriptions
    get:
      tags:
        - "User"
      operationId: getUserSubscriptions
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of subscribed dancing teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "dancing-team-specification.yaml#/components/schemas/DancingTeam"
  /users/register-user:
    description: |
      Endpoint used for registering user
    post:
      tags:
        - "User"
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
      responses:
        "200":
          description: Ok. Successful response will return ok status
  /users/login-user:
    description: |
      Endpoint used for logging-in users
    post:
      tags:
        - "User"
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Ok. Successful response will return ok status and tokens in response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
  /users/refresh-token:
    description: |
      Endpoint used for refreshing token
    post:
      tags:
        - "User"
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
      responses:
        "200":
          description: Ok. Successful response will return ok status and refreshed token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
components:
  schemas:
    RegisterUserRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        idToken:
          type: string
        refreshToken:
          type: string
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
    RefreshTokenResponse:
      type: object
      properties:
        token:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        brithDate:
          type: string
          format: date
        howLongDancing:
          type: integer
        dances:
          type: array
          items:
            $ref: "dance-specification.yaml#/components/schemas/Dance"
        howLongPlayingInstruments:
          type: integer
        instruments:
          type: array
          items:
            $ref: "music-instrument-specification.yaml#/components/schemas/MusicInstrument"
    #        role:
    #          $ref: "#/components/schemas/Role"
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

  
