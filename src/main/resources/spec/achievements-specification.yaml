openapi: 3.0.3
info:
  title: Achievements specification
  description: Achievements specification
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /api/achievements:
    get:
      description: |
        Endpoint used for getting achievements
      tags:
        - "Achievements"
      operationId: getAchievements
      parameters:
        - name: page
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
        - name: size
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
        - name: phrase
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
      responses:
        "200":
          description: Ok. Successful response will return ok status and paged achievements
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedAchievements"
    post:
      description: |
        Endpoint used for adding new achievement
      tags:
        - "Achievements"
      operationId: addAchievement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Achievement"
      responses:
        "200":
          description: Ok. Successful response will return ok status
  /api/achievements/{id}:
    get:
      description: |
        Endpoint used for getting specified achievement
      tags:
        - "Achievements"
      operationId: getAchievement
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status and specified achievement
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Achievement"
    patch:
      description: |
        Endpoint used for updating achievements
      tags:
        - "Achievements"
      operationId: updateAchievement
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Achievement"
      responses:
        "200":
          description: OK. Successful response will return ok status
    delete:
      description: |
        Endpoint used for deleting achievements
      tags:
        - "Achievements"
      operationId: deleteAchievement
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status
          # TODO: Add get achievement distinguished people or get it with data (but not recommend this way)
          # TODO: Add achievement distinguished people CRUD
components:
  schemas:
    PagedAchievements:
      type: object
      properties:
        totalPages:
          type: integer
        totalElements:
          type: integer
        content:
          type: array
          items:
            $ref: "#/components/schemas/Achievement"
    Achievement:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        date:
          type: string
          format: date-time
          nullable: true
        year:
          type: integer # if date is not known
        eventId:
          type: integer
          format: int64
          nullable: true
        city:
          type: string
        description:
          type: string
          nullable: true
        organizer:
          type: string
        category:
          type: string
        level:
          type: string
        distinguishedPeople:
          type: array
          items:
            $ref: "people-specification.yaml#/components/schemas/Person"
        dancingTeamId:
          type: integer
          format: int64

