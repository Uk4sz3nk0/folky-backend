openapi: 3.0.3
info:
  title: Music instrument specification
  description: Music instrument specification
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /api/music-instruments/:
    get:
      description: |
        Endpoint used for getting instruments
      tags:
        - "MusicInstruments"
      operationId: getInstruments
      parameters:
        - name: phrase
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
        - name: typeId
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status with list of matching instruments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MusicInstrument"
    post:
      description: |
        Endpoint used for adding new instrument
      tags:
        - "MusicInstruments"
      operationId: addMusicInstrument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MusicInstrument"
      responses:
        "200":
          description: Ok. Successful response will retun ok status and added object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MusicInstrument"
  /api/music-instruments/{id}:
    get:
      description: |
        Endpoint is used for getting instrument by id
      tags:
        - "MusicInstruments"
      operationId: getInstrumentById
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status and specified instrument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MusicInstrument"
    patch:
      description: |
        Endpoint used for updating existing instruments
      tags:
        - "MusicInstruments"
      operationId: updateInstrument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MusicInstrument"
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status and updated object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MusicInstrument"
    delete:
      description: |
        Endpoint used for deleting instrument
      tags:
        - "MusicInstruments"
      operationId: deleteInstrument
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status
  /api/music-instruments/types/:
    get:
      description: |
        Endpoint used for getting list of music instrument types by name
      tags:
        - "MusicInstruments"
      operationId: getInstrumentTypesByName
      parameters:
        - name: phrase
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: string
      responses:
        "200":
          description: Ok. Successful response will return ok status and list of music instrument types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MusicInstrumentType"
    post:
      description: |
        Endpoint used for adding new instrument type
      tags:
        - "MusicInstruments"
      operationId: addInstrumentType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MusicInstrumentType"
      responses:
        "200":
          description: Ok. Successful response will return ok status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MusicInstrumentType"
    patch:
      description: |
        Endpoint used for updating existing instrument type
      tags:
        - "MusicInstruments"
      operationId: updateInstrumentType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MusicInstrumentType"
      responses:
        "200":
          description: Ok. Successful response will return ok status and updated object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MusicInstrumentType"
  /api/music-instruments/type/{id}:
    get:
      description: |
        Endpoint used for getting specified instrument type
      tags:
        - "MusicInstruments"
      operationId: getInstrumentTypeById
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok, successful response will return ok status and instrument type object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MusicInstrumentType"
    delete:
      description: |
        Endpoint used for deleting instrument type by id
      tags:
        - "MusicInstruments"
      operationId: deleteInstrumentType
      parameters:
        - name: id
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return ok status
components:
  schemas:
    MusicInstrument:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          $ref: "#/components/schemas/MusicInstrumentType"
    MusicInstrumentType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
